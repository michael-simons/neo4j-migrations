<?xml version="1.0" encoding="UTF-8"?>
<migration xmlns="https://michael-simons.github.io/neo4j-migrations">
	<catalog>
		<indexes>
			<index name="title_index" type="fulltext">
				<label>Book</label>
				<properties>
					<property>title</property>
				</properties>
			</index>
			<index name="reads_index">
				<type>READS</type>
				<properties>
					<property>date</property>
					<property>percentage</property>
				</properties>
			</index>
			<index name="metrics" type="property">
				<label>Metric</label>
				<properties>
					<property>timestamp</property>
					<property>name</property>
					<property>agentId</property>
					<property>instanceId</property>
				</properties>
			</index>
		</indexes>
		<constraints>
			<constraint name="unique_isbn" type="unique">
				<label>Book</label>
				<properties>
					<property>isbn</property>
				</properties>
			</constraint>
			<constraint name="exists_isbn" type="exists">
				<label>Book</label>
				<properties>
					<property>isbn</property>
				</properties>
			</constraint>
			<constraint name="xyz" type="property_type">
				<label>Book</label>
				<properties>
					<property type="LOCAL DATETIME">xyz</property>
				</properties>
			</constraint>
		</constraints>
	</catalog>

	<verify />

	<refactor type="merge.nodes">
		<parameters>
			<parameter name="sourceQuery">MATCH (n:Foo) RETURN n</parameter>
		</parameters>
	</refactor>

	<refactor type="merge.nodes">
		<parameters>
			<parameter name="sourceQuery">MATCH (p:Person) RETURN p ORDER BY p.name ASC</parameter>
			<parameter name="mergePolicy">
				<pattern>name</pattern>
				<strategy>KEEP_LAST</strategy>
			</parameter>
			<parameter name="mergePolicy">
				<pattern>.*</pattern>
				<strategy>KEEP_FIRST</strategy>
			</parameter>
		</parameters>
	</refactor>

	<create item="unique_isbn"/>
	<drop>
		<constraint name="old_keys" type="key">
			<label>Book</label>
			<properties>
				<property>p1</property>
				<property>p2</property>
			</properties>
		</constraint>
	</drop>

	<refactor type="rename.type">
		<parameters>
			<parameter name="from">ACTED_IN</parameter>
			<parameter name="to">HAT_GESPIELT_IN</parameter>
		</parameters>
	</refactor>

	<refactor type="rename.label">
		<parameters>
			<parameter name="from">MOVIE</parameter>
			<parameter name="to">FILM</parameter>
		</parameters>
	</refactor>

	<refactor type="rename.nodeProperty">
		<parameters>
			<parameter name="from">released</parameter>
			<parameter name="to">veröffentlicht im Jahr</parameter>
		</parameters>
	</refactor>

	<refactor type="rename.relationshipProperty">
		<parameters>
			<parameter name="from">roles</parameter>
			<parameter name="to">rollen</parameter>
		</parameters>
	</refactor>

	<refactor type="rename.type">
		<parameters>
			<parameter name="from">ACTED_IN</parameter>
			<parameter name="to">HAT_GESPIELT_IN</parameter>
			<parameter name="customQuery">MATCH (n:Movie) &lt;-[r:ACTED_IN] -() WHERE n.title =~ '.*Matrix.*' RETURN r AS n</parameter>
			<parameter name="batchSize">23</parameter>
		</parameters>
	</refactor>

	<refactor type="addSurrogateKeyTo.nodes">
		<parameters>
			<parameter name="labels">
				<value>Movie</value>
				<value>Person</value>
			</parameter>
		</parameters>
	</refactor>

	<refactor type="addSurrogateKeyTo.nodes">
		<parameters>
			<parameter name="labels">
				<value>Movie</value>
				<value>Person</value>
			</parameter>
			<parameter name="batchSize">23</parameter>
			<parameter name="property">theId</parameter>
			<parameter name="generatorFunction">elementId(%s)</parameter>
		</parameters>
	</refactor>

	<refactor type="addSurrogateKeyTo.nodes">
		<parameters>
			<parameter name="customQuery">MATCH (n:Film) return n</parameter>
		</parameters>
	</refactor>

	<refactor type="addSurrogateKeyTo.relationships">
		<parameters>
			<parameter name="type">LIKED</parameter>
		</parameters>
	</refactor>

	<refactor type="addSurrogateKeyTo.relationships">
		<parameters>
			<parameter name="type">LIKED</parameter>
			<parameter name="batchSize">42</parameter>
			<parameter name="property">myId</parameter>
			<parameter name="generatorFunction">id(%s)</parameter>
		</parameters>
	</refactor>

	<refactor type="addSurrogateKeyTo.relationships">
		<parameters>
			<parameter name="customQuery">MATCH (n:Movie) &lt;-[r:ACTED_IN] -() WHERE n.title =~ '.*Matrix.*' RETURN r AS n</parameter>
		</parameters>
	</refactor>

	<refactor type="normalize.asBoolean">
		<parameters>
			<parameter name="customQuery">MATCH (n:Movie) return n</parameter>
			<parameter name="batchSize">42</parameter>
			<parameter name="property">title</parameter>
			<parameter name="trueValues">
				<value>The Matrix</value>
			</parameter>
			<parameter name="falseValues">
				<value>Das deutsche Kettensägenmassaker</value>
				<value/>
				<value>null</value>
			</parameter>
		</parameters>
	</refactor>

	<refactor type="migrate.createFutureIndexes" />
	<refactor type="migrate.createFutureIndexes">
		<parameters>
			<parameter name="suffix">_future</parameter>
			<parameter name="excludes">
				<value>a</value>
				<value>b</value>
			</parameter>
			<parameter name="typeMapping">
				<mapping>
					<name>c</name>
					<type>POINT</type>
				</mapping>
				<mapping>
					<name>d</name>
					<type>TEXT</type>
				</mapping>
			</parameter>
		</parameters>
	</refactor>

	<refactor type="migrate.replaceBTreeIndexes" />
	<refactor type="migrate.replaceBTreeIndexes">
		<parameters>
			<parameter name="excludes">
				<value>a</value>
				<value>b</value>
			</parameter>
			<parameter name="typeMapping">
				<mapping>
					<name>c</name>
					<type>POINT</type>
				</mapping>
				<mapping>
					<name>d</name>
					<type>TEXT</type>
				</mapping>
			</parameter>
		</parameters>
	</refactor>

	<refactor type="migrate.replaceBTreeIndexes">
		<parameters>
			<parameter name="includes">
				<value>x</value>
				<value>y</value>
			</parameter>
		</parameters>
	</refactor>
</migration>
