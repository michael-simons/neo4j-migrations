name: build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TC_CLOUD_TOKEN: ${{ secrets.TC_CLOUD_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
            java-version: 17
      - name: Enable Sonar for local PRs not from Dependabot
        if:  ${{ github.event.sender.login != 'dependabot[bot]' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository) }}
        run: echo "USE_SONAR=sonar" >> $GITHUB_ENV
      - name: Disable Sonar for foreign PRs or from Dependabot
        if:  ${{ github.event.sender.login == 'dependabot[bot]' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository) }}
        run: echo "USE_SONAR=-sonar" >> $GITHUB_ENV
      - name: Prepare testcontainers.cloud agent
        if: env.TC_CLOUD_TOKEN != ''
        run : |
          curl -L -o agent https://app.testcontainers.cloud/download/testcontainers-cloud-agent_linux_x86-64
          chmod +x agent
          ./agent &
          ./agent wait
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
      - name: Clean and verify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw --no-transfer-progress clean install -P$USE_SONAR

  test_cli_native:
    name: Test CLI native binary
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install upx
        run: sudo apt-get install upx
      - uses: actions/checkout@v2
      - name: Restore Maven cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-m2
      - name: Clean and build
        run: ./mvnw --no-transfer-progress -Dnative -DskipTests -pl eu.michael-simons.neo4j:neo4j-migrations-cli clean package
      - name: Run binary
        uses: jbangdev/jbang-action@v0.86.0
        with:
          script: bin/test_native_cli.java

  test_quarkus_native:
    name: Test Quarkus extension in native image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Restore Maven cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-m2
      - name: Clean and verify
        run: ./mvnw --no-transfer-progress -Dnative -pl :neo4j-migrations-quarkus-integration-tests clean verify
