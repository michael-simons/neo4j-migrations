name: create_binaries

on:
  create:
    tags:
      - '*'

jobs:
  create_binaries:
    if: (github.event_name == 'create' && github.event.ref_type == 'tag')
    runs-on: ubuntu-latest
    steps:
      - name: 'Set up JDK'
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: 'Prepare branch name'
        run: >
          echo "refName=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: 'Checkout relevant branch'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.refName }}

      - name: 'Cache Maven packages'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Create distribution'
        run: >
          ./mvnw --no-transfer-progress -DskipTests
          -pl eu.michael-simons.neo4j:neo4j-migrations
          -pl eu.michael-simons.neo4j:neo4j-migrations-test-resources
          -pl eu.michael-simons.neo4j:neo4j-migrations-cli
          package

      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: neo4j-migrations-cli/target/neo4j-migrations*.zip

  create_native_binaries:
    if: (github.event_name == 'create' && github.event.ref_type == 'tag')
    name: 'Build with Graal on ${{ matrix.os }}'
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        gu-binary: [ gu, gu.cmd ]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    runs-on: ${{ matrix.os }}

    steps:
      - name: 'Prepare git'
        run: git config --global core.autocrlf false

      - name: 'Prepare branch name'
        run: >
          echo "refName=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: 'Checkout relevant branch'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.refName }}

      - name: 'Add Developer Command Prompt for Microsoft Visual C++ '
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: 'Set up Graal'
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: '21.3.0'
          java: 'java17'

      - name: 'Install native-image component'
        run: |
          ${{ matrix.gu-binary }} install native-image

      - name: 'Create distribution'
        run: >
          ./mvnw --no-transfer-progress -Pnative -DskipTests
          -pl eu.michael-simons.neo4j:neo4j-migrations
          -pl eu.michael-simons.neo4j:neo4j-migrations-test-resources
          -pl eu.michael-simons.neo4j:neo4j-migrations-cli
          package

      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: neo4j-migrations-cli/target/neo4j-migrations*.zip

  release:
    if: (github.event_name == 'create' && github.event.ref_type == 'tag')
    needs: [ create_binaries, create_native_binaries ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Prepare branch name'
        run: >
          echo "refName=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: 'Checkout relevant branch'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.refName }}
          fetch-depth: 0

      - name: 'Download all build artifacts'
        uses: actions/download-artifact@v2

      - name: 'Cache Maven packages'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Create release'
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_HOMEBREW_GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_TOKEN }}
        run: ./mvnw --no-transfer-progress  -Pjreleaser -pl :neo4j-migrations-parent -DartifactsDir=artifacts jreleaser:full-release
